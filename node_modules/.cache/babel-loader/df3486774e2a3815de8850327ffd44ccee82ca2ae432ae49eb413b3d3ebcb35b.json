{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vidhyadharan\\\\Downloads\\\\QuizMaker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport { FacebookShareButton, LinkedInShareButton, InstagramShareButton, FacebookIcon, LinkedInIcon, InstagramIcon } from 'react-share';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [questionType, setQuestionType] = useState(\"multiple\");\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    if (selectedCategory && numQuestions && difficulty && questionType) {\n      const fetchQuizData = async () => {\n        try {\n          const response = await axios.get(`https://opentdb.com/api.php?amount=${numQuestions}&category=${selectedCategory}&difficulty=${difficulty}&type=${questionType}`);\n          setQuizData(response.data.results);\n          shuffleOptions(response.data.results[0]);\n        } catch (error) {\n          console.error(\"Error fetching quiz data:\", error);\n        }\n      };\n      fetchQuizData();\n    }\n  }, [selectedCategory, numQuestions, difficulty, questionType]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleAnswerOptionClick(null);\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  useEffect(() => {\n    if (quizData.length > 0) {\n      shuffleOptions(quizData[currentQuestion]);\n    }\n  }, [currentQuestion, quizData]);\n  const shuffleOptions = question => {\n    const options = [...question.incorrect_answers, question.correct_answer];\n    for (let i = options.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [options[i], options[j]] = [options[j], options[i]];\n    }\n    setShuffledOptions(options);\n  };\n  const handleAnswerOptionClick = answer => {\n    var _quizData$currentQues;\n    setUserAnswers(prevAnswers => [...prevAnswers, {\n      question: quizData[currentQuestion].question,\n      userAnswer: answer,\n      correctAnswer: quizData[currentQuestion].correct_answer\n    }]);\n    if (answer === ((_quizData$currentQues = quizData[currentQuestion]) === null || _quizData$currentQues === void 0 ? void 0 : _quizData$currentQues.correct_answer)) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.length) {\n      setCurrentQuestion(nextQuestion);\n      setTimeLeft(30);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const handleNumQuestionsChange = event => {\n    setNumQuestions(event.target.value);\n  };\n  const handleDifficultyChange = event => {\n    setDifficulty(event.target.value);\n  };\n  const handleQuestionTypeChange = event => {\n    setQuestionType(event.target.value);\n  };\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(12);\n    doc.text(\"Quiz Results\", 10, 10);\n    doc.text(`You scored ${score} out of ${quizData.length}`, 10, 20);\n    userAnswers.forEach((answer, index) => {\n      const yOffset = 30 + index * 40;\n      doc.text(`Question ${index + 1}: ${answer.question}`, 10, yOffset);\n      doc.text(`Your Answer: ${answer.userAnswer || 'Not Answered'}`, 10, yOffset + 10);\n      doc.text(`Correct Answer: ${answer.correctAnswer}`, 10, yOffset + 20);\n    });\n    doc.save(\"quiz_results.pdf\");\n  };\n  const getResultEmoji = () => {\n    if (score === quizData.length) return \"ðŸŽ‰ Excellent!\";\n    if (score >= quizData.length / 2) return \"ðŸ˜Š Good job!\";\n    return \"ðŸ˜ž Better luck next time!\";\n  };\n  const getEmojiForQuestion = () => {\n    if (currentQuestion % 2 === 0) return \"ðŸ¤”\";\n    return \"ðŸ’¡\";\n  };\n  const isQuizReady = () => selectedCategory && numQuestions && difficulty && questionType;\n  const handleRetakeQuiz = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(30);\n    setUserAnswers([]);\n    setShowHint(false);\n  };\n  const getHint = () => {\n    if (quizData.length > 0) {\n      const hint = `The correct answer is one of these: ${shuffledOptions.join(\", \")}`;\n      return hint;\n    }\n    return \"No hint available\";\n  };\n  const handleDarkModeToggle = () => {\n    setDarkMode(!darkMode);\n  };\n  const getChartData = () => {\n    const data = {\n      labels: quizData.map((_, index) => `Question ${index + 1}`),\n      datasets: [{\n        label: \"User Answers\",\n        data: userAnswers.map(answer => answer.userAnswer === answer.correctAnswer ? 1 : 0),\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        borderColor: \"rgba(75, 192, 192, 1)\",\n        borderWidth: 1\n      }]\n    };\n    return data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkMode ? \"dark-mode\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          role: \"progressbar\",\n          style: {\n            width: `${(currentQuestion + 1) / quizData.length * 100}%`,\n            transition: \"width 0.5s ease-in-out\"\n          },\n          \"aria-valuenow\": currentQuestion + 1,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": quizData.length,\n          children: [currentQuestion + 1, \"/\", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), quizData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading quiz...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-section\",\n        children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success text-center score-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: getResultEmoji()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"You scored \", score, \" out of \", quizData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Here's a fun fact: Did you know? The shortest war in history was between Britain and Zanzibar on August 27, 1896. Zanzibar surrendered after 38 minutes!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: generatePDF,\n            children: \"Download Results as PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mt-2\",\n            onClick: handleRetakeQuiz,\n            children: \"Retake Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: getChartData()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"social-media-sharing mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Share Your Results:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FacebookShareButton, {\n              url: window.location.href,\n              quote: `I scored ${score} out of ${quizData.length} on this quiz!`,\n              className: \"me-2\",\n              children: /*#__PURE__*/_jsxDEV(FacebookIcon, {\n                size: 32,\n                round: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LinkedInShareButton, {\n              url: window.location.href,\n              title: `I scored ${score} out of ${quizData.length} on this quiz!`,\n              className: \"me-2\",\n              children: /*#__PURE__*/_jsxDEV(LinkedInIcon, {\n                size: 32,\n                round: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InstagramShareButton, {\n              url: window.location.href,\n              title: `I scored ${score} out of ${quizData.length} on this quiz!`,\n              className: \"me-2\",\n              children: /*#__PURE__*/_jsxDEV(InstagramIcon, {\n                size: 32,\n                round: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-primary text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-0\",\n                  children: [\"Question \", currentQuestion + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-left\",\n                  children: [\"Time left: \", timeLeft, \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"card-title\",\n                children: quizData[currentQuestion].question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), shuffledOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary w-100 mb-2\",\n                onClick: () => handleAnswerOptionClick(option),\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-info w-100 mt-2\",\n                onClick: () => setShowHint(!showHint),\n                children: showHint ? \"Hide Hint\" : \"Show Hint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hint mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Hint:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this), \" \", getHint()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-info mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleDarkModeToggle,\n              children: \"Toggle Dark Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), isQuizReady() && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-info mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Note:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 23\n              }, this), \" Make sure you have selected all quiz settings before starting.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9OfuIzEt7RLv75XGRTBT80PQKhY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsPDF","FacebookShareButton","LinkedInShareButton","InstagramShareButton","FacebookIcon","LinkedInIcon","InstagramIcon","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","quizData","setQuizData","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","selectedCategory","setSelectedCategory","numQuestions","setNumQuestions","difficulty","setDifficulty","questionType","setQuestionType","timeLeft","setTimeLeft","shuffledOptions","setShuffledOptions","userAnswers","setUserAnswers","showHint","setShowHint","darkMode","setDarkMode","fetchQuizData","response","get","data","results","shuffleOptions","error","console","handleAnswerOptionClick","timer","setInterval","prevTime","clearInterval","length","question","options","incorrect_answers","correct_answer","i","j","Math","floor","random","answer","_quizData$currentQues","prevAnswers","userAnswer","correctAnswer","nextQuestion","handleCategoryChange","event","target","value","handleNumQuestionsChange","handleDifficultyChange","handleQuestionTypeChange","generatePDF","doc","setFontSize","text","forEach","index","yOffset","save","getResultEmoji","getEmojiForQuestion","isQuizReady","handleRetakeQuiz","getHint","hint","join","handleDarkModeToggle","getChartData","labels","map","_","datasets","label","backgroundColor","borderColor","borderWidth","className","children","role","style","width","transition","fileName","_jsxFileName","lineNumber","columnNumber","onClick","url","window","location","href","quote","size","round","title","option","_c","$RefreshReg$"],"sources":["C:/Users/vidhyadharan/Downloads/QuizMaker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport { FacebookShareButton, LinkedInShareButton, InstagramShareButton, FacebookIcon, LinkedInIcon, InstagramIcon } from 'react-share';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction App() {\r\n  const [quizData, setQuizData] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [numQuestions, setNumQuestions] = useState(\"\");\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [questionType, setQuestionType] = useState(\"multiple\");\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [shuffledOptions, setShuffledOptions] = useState([]);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedCategory && numQuestions && difficulty && questionType) {\r\n      const fetchQuizData = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            `https://opentdb.com/api.php?amount=${numQuestions}&category=${selectedCategory}&difficulty=${difficulty}&type=${questionType}`\r\n          );\r\n          setQuizData(response.data.results);\r\n          shuffleOptions(response.data.results[0]);\r\n        } catch (error) {\r\n          console.error(\"Error fetching quiz data:\", error);\r\n        }\r\n      };\r\n\r\n      fetchQuizData();\r\n    }\r\n  }, [selectedCategory, numQuestions, difficulty, questionType]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      handleAnswerOptionClick(null);\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft]);\r\n\r\n  useEffect(() => {\r\n    if (quizData.length > 0) {\r\n      shuffleOptions(quizData[currentQuestion]);\r\n    }\r\n  }, [currentQuestion, quizData]);\r\n\r\n  const shuffleOptions = (question) => {\r\n    const options = [...question.incorrect_answers, question.correct_answer];\r\n    for (let i = options.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [options[i], options[j]] = [options[j], options[i]];\r\n    }\r\n    setShuffledOptions(options);\r\n  };\r\n\r\n  const handleAnswerOptionClick = (answer) => {\r\n    setUserAnswers((prevAnswers) => [\r\n      ...prevAnswers,\r\n      {\r\n        question: quizData[currentQuestion].question,\r\n        userAnswer: answer,\r\n        correctAnswer: quizData[currentQuestion].correct_answer,\r\n      },\r\n    ]);\r\n\r\n    if (answer === quizData[currentQuestion]?.correct_answer) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < quizData.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n      setTimeLeft(30);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  const handleNumQuestionsChange = (event) => {\r\n    setNumQuestions(event.target.value);\r\n  };\r\n\r\n  const handleDifficultyChange = (event) => {\r\n    setDifficulty(event.target.value);\r\n  };\r\n\r\n  const handleQuestionTypeChange = (event) => {\r\n    setQuestionType(event.target.value);\r\n  };\r\n\r\n  const generatePDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(12);\r\n    doc.text(\"Quiz Results\", 10, 10);\r\n    doc.text(`You scored ${score} out of ${quizData.length}`, 10, 20);\r\n\r\n    userAnswers.forEach((answer, index) => {\r\n      const yOffset = 30 + index * 40;\r\n      doc.text(`Question ${index + 1}: ${answer.question}`, 10, yOffset);\r\n      doc.text(`Your Answer: ${answer.userAnswer || 'Not Answered'}`, 10, yOffset + 10);\r\n      doc.text(`Correct Answer: ${answer.correctAnswer}`, 10, yOffset + 20);\r\n    });\r\n\r\n    doc.save(\"quiz_results.pdf\");\r\n  };\r\n\r\n  const getResultEmoji = () => {\r\n    if (score === quizData.length) return \"ðŸŽ‰ Excellent!\";\r\n    if (score >= quizData.length / 2) return \"ðŸ˜Š Good job!\";\r\n    return \"ðŸ˜ž Better luck next time!\";\r\n  };\r\n\r\n  const getEmojiForQuestion = () => {\r\n    if (currentQuestion % 2 === 0) return \"ðŸ¤”\";\r\n    return \"ðŸ’¡\";\r\n  };\r\n\r\n  const isQuizReady = () => selectedCategory && numQuestions && difficulty && questionType;\r\n\r\n  const handleRetakeQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    setScore(0);\r\n    setShowScore(false);\r\n    setTimeLeft(30);\r\n    setUserAnswers([]);\r\n    setShowHint(false);\r\n  };\r\n\r\n  const getHint = () => {\r\n    if (quizData.length > 0) {\r\n      const hint = `The correct answer is one of these: ${shuffledOptions.join(\", \")}`;\r\n      return hint;\r\n    }\r\n    return \"No hint available\";\r\n  };\r\n\r\n  const handleDarkModeToggle = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  const getChartData = () => {\r\n    const data = {\r\n      labels: quizData.map((_, index) => `Question ${index + 1}`),\r\n      datasets: [\r\n        {\r\n          label: \"User Answers\",\r\n          data: userAnswers.map(answer => answer.userAnswer === answer.correctAnswer ? 1 : 0),\r\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n          borderColor: \"rgba(75, 192, 192, 1)\",\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n      <div className=\"container\">\r\n        <div className=\"progress mt-4\">\r\n          <div\r\n            className=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            style={{\r\n              width: `${((currentQuestion + 1) / quizData.length) * 100}%`,\r\n              transition: \"width 0.5s ease-in-out\",\r\n            }}\r\n            aria-valuenow={(currentQuestion + 1)}\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax={quizData.length}\r\n          >\r\n            {currentQuestion + 1}/{quizData.length}\r\n          </div>\r\n        </div>\r\n\r\n        {quizData.length === 0 ? (\r\n          <div className=\"loading\">Loading quiz...</div>\r\n        ) : (\r\n          <div className=\"quiz-section\">\r\n            {showScore ? (\r\n              <div className=\"alert alert-success text-center score-section\">\r\n                <h4>{getResultEmoji()}</h4>\r\n                <h5>You scored {score} out of {quizData.length}</h5>\r\n                <p>Here's a fun fact: Did you know? The shortest war in history was between Britain and Zanzibar on August 27, 1896. Zanzibar surrendered after 38 minutes!</p>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={generatePDF}\r\n                >\r\n                  Download Results as PDF\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary mt-2\"\r\n                  onClick={handleRetakeQuiz}\r\n                >\r\n                  Retake Quiz\r\n                </button>\r\n                <div className=\"chart mt-4\">\r\n                  <Bar data={getChartData()} />\r\n                </div>\r\n                <div className=\"social-media-sharing mt-3\">\r\n                  <h5>Share Your Results:</h5>\r\n                  <FacebookShareButton\r\n                    url={window.location.href}\r\n                    quote={`I scored ${score} out of ${quizData.length} on this quiz!`}\r\n                    className=\"me-2\"\r\n                  >\r\n                    <FacebookIcon size={32} round />\r\n                  </FacebookShareButton>\r\n                  <LinkedInShareButton\r\n                    url={window.location.href}\r\n                    title={`I scored ${score} out of ${quizData.length} on this quiz!`}\r\n                    className=\"me-2\"\r\n                  >\r\n                    <LinkedInIcon size={32} round />\r\n                  </LinkedInShareButton>\r\n                  <InstagramShareButton\r\n                    url={window.location.href}\r\n                    title={`I scored ${score} out of ${quizData.length} on this quiz!`}\r\n                    className=\"me-2\"\r\n                  >\r\n                    <InstagramIcon size={32} round />\r\n                  </InstagramShareButton>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"card mb-3\">\r\n                  <div className=\"card-header bg-primary text-white\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <h5 className=\"mb-0\">Question {currentQuestion + 1}</h5>\r\n                      <div className=\"time-left\">Time left: {timeLeft}s</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{quizData[currentQuestion].question}</h6>\r\n                    {shuffledOptions.map((option, index) => (\r\n                      <button\r\n                        key={index}\r\n                        className=\"btn btn-primary w-100 mb-2\"\r\n                        onClick={() => handleAnswerOptionClick(option)}\r\n                      >\r\n                        {option}\r\n                      </button>\r\n                    ))}\r\n                    <button\r\n                      className=\"btn btn-info w-100 mt-2\"\r\n                      onClick={() => setShowHint(!showHint)}\r\n                    >\r\n                      {showHint ? \"Hide Hint\" : \"Show Hint\"}\r\n                    </button>\r\n                    {showHint && (\r\n                      <div className=\"hint mt-2\">\r\n                        <strong>Hint:</strong> {getHint()}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"question-info mt-3\">\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={handleDarkModeToggle}\r\n                  >\r\n                    Toggle Dark Mode\r\n                  </button>\r\n                  {isQuizReady() && (\r\n                    <div className=\"alert alert-info mt-2\">\r\n                      <strong>Note:</strong> Make sure you have selected all quiz settings before starting.\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}